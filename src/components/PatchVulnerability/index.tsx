"use client";
import React from "react";
import Image, { StaticImageData } from "next/image";
import documentIcon from "../../../public/homepage/document-icon.svg";
import videoIcon from "../../../public/homepage/video-icon.svg";
import tickImg from "../../../public/industries/industries-tick-circle-icon.svg";
import infoImg1 from "../../../public/services-solutions/Business-Planning-Disaster-Recovery-info-img1.png";
import infoImg2 from "../../../public/services-solutions/Business-Planning-Disaster-Recovery-info-img2.png";
import infoImg3 from "../../../public/services-solutions/Business-Planning-Disaster-Recovery-info-img3.png";
import PatchVulnerabilityHero from "./Sub/PatchVulnerabilityHero";
import PatchVulnerabilityFeatures from "./Sub/PatchVulnerabilityFeatures";
import PageLayout from "../PageLayout";
import Link from "next/link";
import ImageTextSection from "../Elements/ImageTextSection";
import Breadcrumbs from "../Elements/Breadcrumbs";
import ContentContainer from "../Elements/ContentContainer";
import { GenericElements } from "@/types";
import VideoPopup from "../Elements/VideoPopup";

const PATCH_VULNERABILITY_DATA = [
  {
    img: infoImg1,
    title: "The Challenge",
    description:
      "Today, most IT departments are stretched thin and keeping up with patches and vulnerabilities has become a full-time job. Adversaries utilizing attack vectors frequently seek to exploit vulnerabilities on systems that have not yet been patched against publicly available exploits. This leaves your organization at risk for a costly attack that could shut down business for good.",
  },
  {
    img: infoImg2,
    title: "How We Solve It",
    description:
      "InfoSight's proactive Patch & Vulnerability Management Services can act as an extension to your IT department to identify and, deploy critical patches 24x7.Our US-based NOC operates 24x7, meaning our Network Engineers apply patches after work hours to minimize interruption and facilitate a stable and secure environment.We continuously scan devices and applications for missing required patches and from there, we test and determine which applications can be patched/updated and apply them for you.",
  },
  {
    img: infoImg3,
    title: "The Outcome",
    description:
      "With our patch management approval and rollout process, testing can occur prior to updating the entire population of servers and workstations. Additionally, our reporting is detailed and meets all regulatory requirements.",
  },
];

interface IServicesPageProps {
  heroImg: StaticImageData;
  heroTitle: string;
  overviewDescription: string | GenericElements;
  downloadLink?: string;
  videoLink?: string;
  path: string;
  featuresData: string[];
  otherFeaturesData?: string[];
  featureTitle?: string;
  otherFeatureTitle?: string;
}

const Features = ({
  data,
  title = "Key Features",
}: {
  data?: string[];
  title?: string;
}) => {
  if (!data) return null;
  return (
    <div className="bg-[#132534]">
      <div className="p-5 lg:px-20 lg:py-20 py-10">
        <h3 className="text-white text-2xl lg:text-4xl font-semibold">
          {title}
        </h3>
        <div className="grid lg:grid-cols-4 gap-5 py-5 lg:py-10">
          {data.map((el, i) => {
            const key = el.substring(0, 10) + i;

            return (
              <div
                key={key}
                className="flex items-center bg-[#1E3A52] gap-5 h-[130px] p-6 rounded-md"
              >
                <Image src={tickImg} alt="" />
                <p className="text-white font-semibold">{el}</p>
              </div>
            );
          })}
        </div>
      </div>
    </div>
  );
};

const ServicePageLayout = ({
  heroImg,
  heroTitle,
  overviewDescription,
  downloadLink,
  videoLink,
  path,
  featuresData,
  otherFeaturesData,
  featureTitle,
  otherFeatureTitle,
}: IServicesPageProps) => {
  const [isModalOpen, setIsModalOpen] = React.useState(false);
  // 4, 5, 6, 7, 8, 9, 10,11,12,13,14,15,16
  // 4 -> 2, 2

  return (
    <>
      <PageLayout hideWeProvide hideOurServices>
        <ContentContainer bgImage={heroImg}>
          <div className="md:min-h-[50vh] min-h-[30vh] flex justify-center items-center px-5 md:px-0 py-5">
            <h1 className="text-white text-center lg:text-left md:text-[60px] text-4xl font-extrabold lg:w-8/12 leading-tight">
              {heroTitle}
            </h1>
          </div>
        </ContentContainer>
        <Breadcrumbs path={path} />
        <h3 className="p-5 lg:px-20 text-2xl lg:text-4xl font-semibold">
          Overview
        </h3>
        <div className="p-5 lg:px-20 ">
          <div className="border-b border-gray-300 pb-10">
            <div className="lg:p-10 p-5 bg-gray-100 flex flex-col lg:flex-row gap-5 lg:gap-20 justify-between">
              {overviewDescription}
              {(downloadLink || videoLink) && (
                <div
                  className={`flex gap-5 flex-col lg:flex-row lg:items-center cursor-pointer lg:w-${
                    downloadLink && videoLink ? "6" : "8"
                  }/12`}
                >
                  {downloadLink && (
                    <Link href={downloadLink} target="_blank">
                      <div className="flex gap-5 items-center">
                        <Image src={documentIcon} alt="" />
                        <p className=" text-[#8C340D] font-semibold">
                          Download Overview
                        </p>
                      </div>
                    </Link>
                  )}
                  {videoLink && (
                    <div
                      className="flex gap-5 items-center"
                      onClick={() => {
                        setIsModalOpen(true);
                      }}
                    >
                      <Image src={videoIcon} alt="" />
                      <p className=" text-[#8C340D] font-semibold">
                        Learn More
                      </p>
                    </div>
                  )}
                </div>
              )}
            </div>
          </div>
        </div>

        <ImageTextSection
          data={PATCH_VULNERABILITY_DATA}
          dataLabel="PATCH_VULNERABILITY_DATA"
        />

        <Features data={featuresData} title={featureTitle} />
        <Features data={otherFeaturesData} title={otherFeatureTitle} />
      </PageLayout>
      {videoLink && (
        <VideoPopup
          isModalOpen={isModalOpen}
          setModalOpen={setIsModalOpen}
          videoLink={videoLink}
        />
      )}
    </>
  );
};

const PatchVulnerability = () => {
  React.useEffect(() => {
    document.title = "Patch Vulnerability Management";
  }, []);

  return (
    <PageLayout hideWeProvide hideOurServices>
      <PatchVulnerabilityHero />
      <Breadcrumbs path="Home / Services & Solutions / Managed Services / Patch & Vulnerability Management Services" />
      <h3 className="p-5 lg:px-20 text-2xl lg:text-4xl font-semibold">
        Overview
      </h3>
      <div className="p-5 lg:px-20 ">
        <div className="border-b border-gray-300 pb-10">
          <div className="lg:p-10 p-5 bg-gray-100 flex flex-col lg:flex-row gap-5 lg:gap-20 justify-between">
            <p className=" text-justify text-[#444444]">
              InfoSight&apos;s Patch Management services are designed to address
              Windows, Linux and 3rd party applications. Our services reduce the
              risk around the exploitation of vulnerabilities by applying
              critical security patches within the shortest timeframe.
            </p>
            <div className="flex gap-5 flex-col lg:flex-row lg:items-center lg:w-8/12 cursor-pointer">
              <Link
                href="https://www.infosightinc.com/pdf/InfoSight-Patch-Vulnerability-Management.pdf"
                target="_blank"
              >
                <div className="flex gap-5 items-center">
                  <Image src={documentIcon} alt="" />
                  <p className=" text-[#8C340D] font-semibold">
                    Download Overview
                  </p>
                </div>
              </Link>
            </div>
          </div>
        </div>
      </div>

      <ImageTextSection
        data={PATCH_VULNERABILITY_DATA}
        dataLabel="PATCH_VULNERABILITY_DATA"
      />
      <PatchVulnerabilityFeatures />
    </PageLayout>
  );
};

export default PatchVulnerability;
